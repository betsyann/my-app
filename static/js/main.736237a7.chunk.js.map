{"version":3,"sources":["textures/sun.jpg","textures/earth.jpg","textures/mercury.jpg","textures/jupiter.jpg","textures/mars.jpg","textures/neptune.jpg","textures/venus.jpg","textures/uranus.jpg","textures/saturn.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","scene","THREE","camera","window","innerWidth","innerHeight","position","set","renderer","antialias","canvas","domElement","document","body","appendChild","controls","OrbitControls","target","update","light","add","texture","load","SUN","sun","map","geometry","translate","scale","textureM","MERCURY","mercury","textureV","VENUS","venus","earthTexture","EARTH","earth","textureMars","MARS","mars","textureJ","JUPITER","jupiter","textureS","SATURN","saturn","textureU","URANUS","uranus","textureN","NEPTUNE","neptune","addEventListener","aspect","updateProjectionMatrix","setSize","setAnimationLoop","rotation","y","render","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"oMAAe,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,mCC6H1BA,MA9Gf,WACE,IAAIC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAwB,IAAME,OAAOC,WAAaD,OAAOE,YAAa,GAAI,KAC3FH,EAAOI,SAASC,IAAI,IAAK,EAAG,IAC5B,IAAIC,EAAW,IAAIP,IAAoB,CACrCQ,WAAW,IAETC,EAASF,EAASG,WACtBC,SAASC,KAAKC,YAAYJ,GAE1B,IAAIK,EAAW,IAAIC,IAAcd,EAAQM,EAASG,YAClDI,EAASE,OAAOV,IAAI,EAAG,EAAG,GAC1BQ,EAASG,SAET,IAAIC,EAAQ,IAAIlB,IAAmB,UACnCD,EAAMoB,IAAID,GAcV,IAAIE,GAAU,IAAIpB,KAAsBqB,KAAKC,GACzCC,EAAM,IAAIvB,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKJ,KACvGG,EAAIE,SAASC,UAAU,EAAG,EAAG,GAC7BH,EAAII,MAAMrB,IAAI,GAAI,GAAI,IACtBP,EAAMoB,IAAII,GAEV,IAAIK,GAAW,IAAI5B,KAAsBqB,KAAKQ,GAC1CC,EAAU,IAAI9B,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKI,KAC3GE,EAAQL,SAASC,UAAU,GAAI,EAAG,GAClCI,EAAQH,MAAMrB,IAAI,IAAK,IAAK,KAC5BP,EAAMoB,IAAIW,GAEV,IAAIC,GAAW,IAAI/B,KAAsBqB,KAAKW,GAC1CC,EAAQ,IAAIjC,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKO,KACzGE,EAAMR,SAASC,UAAU,MAAO,EAAG,GACnCO,EAAMN,MAAMrB,IAAI,KAAM,KAAM,MAC5BP,EAAMoB,IAAIc,GAEV,IAAIC,GAAe,IAAIlC,KAAsBqB,KAAKc,GAC9CC,EAAQ,IAAIpC,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKU,KACzGE,EAAMX,SAASC,UAAU,GAAI,EAAG,GAChCU,EAAMT,MAAMrB,IAAI,KAAM,KAAM,MAC5BP,EAAMoB,IAAIiB,GAEV,IAAIC,GAAc,IAAIrC,KAAsBqB,KAAKiB,GAC7CC,EAAO,IAAIvC,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKa,KACxGE,EAAKd,SAASC,UAAU,MAAO,EAAG,GAClCa,EAAKZ,MAAMrB,IAAI,IAAK,IAAK,KACzBP,EAAMoB,IAAIoB,GAEV,IAAIC,GAAW,IAAIxC,KAAsBqB,KAAKoB,GAC1CC,EAAU,IAAI1C,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKgB,KAC3GE,EAAQjB,SAASC,UAAU,MAAO,EAAG,GACrCgB,EAAQf,MAAMrB,IAAI,KAAM,KAAM,MAC9BP,EAAMoB,IAAIuB,GAEV,IAAIC,GAAW,IAAI3C,KAAsBqB,KAAKuB,GAC1CC,EAAS,IAAI7C,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKmB,KAC1GE,EAAOpB,SAASC,UAAU,OAAQ,EAAG,GACrCmB,EAAOlB,MAAMrB,IAAI,IAAK,IAAK,KAC3BP,EAAMoB,IAAI0B,GAEV,IAAIC,GAAW,IAAI9C,KAAsBqB,KAAK0B,GAC1CC,EAAS,IAAIhD,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKsB,KAC1GE,EAAOvB,SAASC,UAAU,IAAK,EAAG,GAClCsB,EAAOrB,MAAMrB,IAAI,IAAK,IAAK,KAC3BP,EAAMoB,IAAI6B,GAEV,IAAIC,GAAW,IAAIjD,KAAsBqB,KAAK6B,GAC1CC,EAAU,IAAInD,IAAW,IAAIA,IAA2B,EAAG,GAAI,IAAK,IAAIA,IAAwB,CAAEwB,IAAKyB,KAyB3G,OAxBAE,EAAQ1B,SAASC,UAAU,KAAM,EAAG,GACpCyB,EAAQxB,MAAMrB,IAAI,IAAK,IAAK,KAC5BP,EAAMoB,IAAIgC,GAGVjD,OAAOkD,iBAAiB,UAExB,WAEEnD,EAAOoD,OAASnD,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOqD,yBAEP/C,EAASgD,QAAQrD,OAAOC,WAAYD,OAAOE,gBAPK,GAWlDG,EAASiD,kBAAiB,WA7ExB1B,EAAQ2B,SAASC,GAAK,OACtBnC,EAAIkC,SAASC,GAAK,KAClBzB,EAAMwB,SAASC,GAAK,MACpBtB,EAAMqB,SAASC,GAAK,OACpBnB,EAAKkB,SAASC,GAAK,OACnBhB,EAAQe,SAASC,GAAK,OACtBb,EAAOY,SAASC,GAAK,MACrBV,EAAOS,SAASC,GAAK,MACrBP,EAAQM,SAASC,GAAK,MAuEtBnD,EAASoD,OAAO5D,EAAOE,GACvBM,EAASgD,QAAQrD,OAAOC,WAAYD,OAAOE,gBAM3C,qBAAKwD,UAAU,SC3GJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEF5D,SAAS6D,eAAe,SAM1BX,M","file":"static/js/main.736237a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sun.47ff247f.jpg\";","export default __webpack_public_path__ + \"static/media/earth.70f26b64.jpg\";","export default __webpack_public_path__ + \"static/media/mercury.7e279387.jpg\";","export default __webpack_public_path__ + \"static/media/jupiter.bd7c15fa.jpg\";","export default __webpack_public_path__ + \"static/media/mars.fc0f1569.jpg\";","export default __webpack_public_path__ + \"static/media/neptune.e79ef60c.jpg\";","export default __webpack_public_path__ + \"static/media/venus.afb4c5ab.jpg\";","export default __webpack_public_path__ + \"static/media/uranus.fd750d14.jpg\";","export default __webpack_public_path__ + \"static/media/saturn.7872cd15.jpg\";","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { Material } from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport SUN from './textures/sun.jpg';\nimport EARTH from './textures/earth.jpg';\nimport MERCURY from './textures/mercury.jpg';\nimport JUPITER from './textures/jupiter.jpg';\nimport MARS from './textures/mars.jpg';\nimport NEPTUNE from './textures/neptune.jpg';\nimport VENUS from './textures/venus.jpg';\nimport URANUS from './textures/uranus.jpg';\nimport SATURN from './textures/saturn.jpg';\n\nfunction App() {\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(1000, window.innerWidth / window.innerHeight, 10, 900);\n  camera.position.set(100, 0, 60);\n  var renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  var canvas = renderer.domElement;\n  document.body.appendChild(canvas);\n\n  var controls = new OrbitControls(camera, renderer.domElement);\n  controls.target.set(0, 1, 0);\n  controls.update();\n\n  var light = new THREE.AmbientLight(0xFFFFFF); // soft white light\n  scene.add(light);\n\n  function rotateCube() {\n    mercury.rotation.y += .00474;\n    sun.rotation.y += .001;\n    venus.rotation.y += .0035;\n    earth.rotation.y += .00298;\n    mars.rotation.y += .00241;\n    jupiter.rotation.y += .00131;\n    saturn.rotation.y += .00097;\n    uranus.rotation.y += .00068;\n    neptune.rotation.y += .00056;\n  }\n\n  var texture = new THREE.TextureLoader().load(SUN);\n  var sun = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: texture }));\n  sun.geometry.translate(0, 0, 0);\n  sun.scale.set(13, 13, 13);\n  scene.add(sun);\n\n  var textureM = new THREE.TextureLoader().load(MERCURY);\n  var mercury = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureM }));\n  mercury.geometry.translate(39, 0, 0);\n  mercury.scale.set(.48, .48, .48);\n  scene.add(mercury);\n\n  var textureV = new THREE.TextureLoader().load(VENUS);\n  var venus = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureV }));\n  venus.geometry.translate(21.54, 0, 0);\n  venus.scale.set(1.21, 1.21, 1.21);\n  scene.add(venus);\n\n  var earthTexture = new THREE.TextureLoader().load(EARTH);\n  var earth = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: earthTexture }));\n  earth.geometry.translate(24, 0, 0);\n  earth.scale.set(1.28, 1.28, 1.28);\n  scene.add(earth);\n\n  var textureMars = new THREE.TextureLoader().load(MARS);\n  var mars = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureMars }));\n  mars.geometry.translate(52.63, 0, 0);\n  mars.scale.set(.68, .68, .68);\n  scene.add(mars);\n\n  var textureJ = new THREE.TextureLoader().load(JUPITER);\n  var jupiter = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureJ }));\n  jupiter.geometry.translate(63.94, 0, 0);\n  jupiter.scale.set(1.42, 1.42, 1.42);\n  scene.add(jupiter);\n\n  var textureS = new THREE.TextureLoader().load(SATURN);\n  var saturn = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureS }));\n  saturn.geometry.translate(129.46, 0, 0);\n  saturn.scale.set(1.2, 1.2, 1.2);\n  scene.add(saturn);\n\n  var textureU = new THREE.TextureLoader().load(URANUS);\n  var uranus = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureU }));\n  uranus.geometry.translate(577, 0, 0);\n  uranus.scale.set(.52, .52, .52);\n  scene.add(uranus);\n\n  var textureN = new THREE.TextureLoader().load(NEPTUNE);\n  var neptune = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 32, 32), new THREE.MeshPhongMaterial({ map: textureN }));\n  neptune.geometry.translate(1230, 0, 0);\n  neptune.scale.set(.49, .49, .49);\n  scene.add(neptune);\n\n\n  window.addEventListener('resize', onWindowResize, false);\n\n  function onWindowResize() {\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n  }\n\n  renderer.setAnimationLoop(() => {\n    rotateCube();\n    renderer.render(scene, camera);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  });\n\n\n\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}